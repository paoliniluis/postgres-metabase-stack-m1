version: '3.9'
services:
  metabase:
    build: .
    container_name: metabase
    hostname: metabase
    volumes: 
    - /dev/urandom:/dev/random:ro
    ports:
      - 3000:3000
    environment: 
      - "MB_DB_TYPE=postgres"
      - "MB_DB_DBNAME=metabase"
      - "MB_DB_PORT=5432"
      - "MB_DB_USER=metabase"
      - "MB_DB_PASS=mysecretpassword"
      - "MB_DB_HOST=postgres-app-db"
    networks: 
      - metanet1
    depends_on: 
      postgres-app-db:
        condition: service_healthy
      postgres-data1:
        condition: service_healthy
  postgres-app-db:
    image: postgres:15.2-alpine
    container_name: postgres-app-db
    hostname: postgres-app-db
    ports:
      - 5432:5432
    environment:
      - "POSTGRES_USER=metabase"
      - "POSTGRES_DB=metabase"
      - "POSTGRES_PASSWORD=mysecretpassword"
    networks: 
      - metanet1
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase -d metabase"]
      interval: 10s
      timeout: 5s
      retries: 5
  setup:
    image: bash:5.1.16
    container_name: setup
    volumes:
      - $PWD/setup:/tmp
    networks:
      - metanet1
    depends_on:
      - metabase
    command: sh /tmp/metabase-setup.sh metabase:3000
  postgres-data1:
    image: metabase/qa-databases:postgres-sample-12
    container_name: postgres-data1
    hostname: postgres-data1
    networks: 
      - metanet1
    cpus: 4
    mem_limit: 128m
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U metabase -d sample"]
      interval: 10s
      timeout: 5s
      retries: 5
networks: 
  metanet1:
    driver: bridge